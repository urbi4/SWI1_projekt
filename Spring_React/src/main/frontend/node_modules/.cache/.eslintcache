[{"C:\\Users\\Dumar\\Desktop\\Rest_React\\Spring_React\\src\\main\\my-app\\src\\index.js":"1","C:\\Users\\Dumar\\Desktop\\Rest_React\\Spring_React\\src\\main\\my-app\\src\\App.js":"2","C:\\Users\\Dumar\\Documents\\GitHub\\SWI1_projekt\\Spring_React\\src\\main\\my-app\\src\\index.js":"3","C:\\Users\\Dumar\\Documents\\GitHub\\SWI1_projekt\\Spring_React\\src\\main\\my-app\\src\\App.js":"4","C:\\Users\\Dumar\\Desktop\\Projekt Reworked\\SWI1_projekt\\Spring_React\\src\\main\\frontend\\src\\index.js":"5","C:\\Users\\Dumar\\Desktop\\Projekt Reworked\\SWI1_projekt\\Spring_React\\src\\main\\frontend\\src\\App.js":"6"},{"size":220,"mtime":1618431392834,"results":"7","hashOfConfig":"8"},{"size":7453,"mtime":1618431489689,"results":"9","hashOfConfig":"8"},{"size":220,"mtime":1619020398335,"results":"10","hashOfConfig":"11"},{"size":15479,"mtime":1619139100635,"results":"12","hashOfConfig":"11"},{"size":220,"mtime":1619020398335,"results":"13","hashOfConfig":"14"},{"size":15479,"mtime":1619139100635,"results":"15","hashOfConfig":"14"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m84zxi",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"yr4omv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jdnwaj",{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Dumar\\Desktop\\Rest_React\\Spring_React\\src\\main\\my-app\\src\\index.js",[],"C:\\Users\\Dumar\\Desktop\\Rest_React\\Spring_React\\src\\main\\my-app\\src\\App.js",[],"C:\\Users\\Dumar\\Documents\\GitHub\\SWI1_projekt\\Spring_React\\src\\main\\my-app\\src\\index.js",[],["30","31"],"C:\\Users\\Dumar\\Documents\\GitHub\\SWI1_projekt\\Spring_React\\src\\main\\my-app\\src\\App.js",["32","33","34"],"import React, {useState} from \"react\";\nimport {Button, Card, Col, Container, Form, ListGroup, Row} from \"react-bootstrap\";\nimport DateTimePicker from 'react-datetime-picker';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            surname: \"\",\n            phone: \"\",\n            email: \"\",\n            street: \"\",\n            houseNumber: \"\",\n            city: \"\",\n            plate: \"\",\n            date: \"\",\n            time: \"\",\n            vehicle: \"\",\n            problems: [],\n            data: []\n        };\n        this.labels = {\n            name: \"Jméno\",\n            surname: \"Příjmení\",\n            phone: \"Tel. číslo\",\n            email: \"Email\",\n            street: \"Ulice\",\n            houseNumber: \"Číslo domu\",\n            city: \"Město\",\n            plate: \"SPZ\",\n        }\n        this.errors = 0\n        this.button = true\n    }\n\n    onChange = (e, name) => {\n        this.checkValue(e, name)\n        this.setState({\n            [name]: e\n        })\n        this.setButton()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.date !== \"\" && prevState.date !== this.state.date) {\n            this.getTimes(this.state.date)\n        }\n    }\n\n    setButton = () => {\n        let empty = 0;\n\n        for(let item in this.state){\n            if (this.state[item].length === 0){\n                empty++;\n            }\n        }\n\n        if (this.errors > 0 || empty > 0) {\n            this.button = true\n        } else {\n            this.button = false\n        }\n\n        this.forceUpdate()\n\n    }\n\n    checkValue = (text, name) => {\n        switch (name) {\n            case \"name\":\n            case \"surname\":\n            case \"street\":\n            case \"city\": {\n                this.checkText(text, name)\n                break;\n            }\n            case \"phone\": {\n                this.checkPhone(text, name)\n                break;\n            }\n            case \"email\": {\n                this.checkEmail(text, name)\n                break;\n            }\n            case \"houseNumber\": {\n                this.checkHouseNumber(text, name)\n                break;\n            }\n            case \"plate\": {\n                this.checkPlate(text, name)\n                break;\n            }\n        }\n    }\n\n    checkText = (text, name) => {\n        if (!/^[a-záčďěéíňóřšťúůýž]+$/.test(text.toLowerCase())) {\n            this.setLabel(text, name, true)\n        } else {\n            this.setLabel(text, name, false)\n        }\n    }\n\n    checkPhone = (text, name) => {\n        if (!/^\\+[0-9]{12}$/.test(text)) {\n            this.setLabel(text, name, true)\n        } else {\n            this.setLabel(text, name, false)\n        }\n    }\n\n    checkEmail = (text, name) => {\n        if (!/^[a-zA-Z.]+@[a-zA-Z]+.[a-zA-Z.]+$/.test(text.toLowerCase())) {\n            this.setLabel(text, name, true)\n        } else {\n            this.setLabel(text, name, false)\n        }\n    }\n\n    checkHouseNumber = (text, name) => {\n        if (!/^[0-9]{1,10}(\\/[0-9]{1,10})*$/.test(text)) {\n            this.setLabel(text, name, true)\n        } else {\n            this.setLabel(text, name, false)\n        }\n    }\n\n    checkPlate = (text, name) => {\n        if (!/^[0-9a-z]{5,8}$/.test(text.toLowerCase())) {\n            this.setLabel(text, name, true)\n        } else {\n            this.setLabel(text, name, false)\n        }\n    }\n\n    setLabel = (text, name, error) => {\n        if (error && !this.labels[name].includes(\"!\")) {\n            this.labels[name] += \" - chybný formát !\"\n            this.errors++\n        }\n\n        if (!error && this.labels[name].includes(\"!\")) {\n            let lengthOfLabel = this.labels[name].length\n            this.labels[name] = this.labels[name].substr(0, lengthOfLabel - 17)\n            this.errors--\n        }\n\n\n    }\n\n    getTimes(date) {\n        const axios = require('axios').default;\n        axios.get('http://localhost:8080/times', {\n            params: {\n                value: date\n            }\n        })\n            .then((e) => {\n                this.setState({\"data\": e.data})\n            });\n    }\n\n    postToBack = () => {\n        const axios = require('axios').default;\n\n        axios({\n            method: 'post',\n            url: 'http://localhost:8080/orders',\n            data: {/*\n                \"description\": this.state.description,\n                \"date\": this.state.date.toISOString(),\n                \"price\": this.state.price*/\n            }\n        }).then((response) => {\n            console.log(response);\n        }, (error) => {\n            console.log(error);\n        });\n    }\n\n    check = (e,name) => {\n        if (this.state.problems.includes(name)){\n            this.state.problems.splice(this.state.problems.indexOf(name))\n        }else {\n            this.state.problems.push(name)\n        }\n        this.setButton()\n    }\n\n    render() {\n\n        const DisplayItems = (data) => {\n            const list = data.children.map(item => <option key={item}>{item}</option>)\n            return (\n                <Form.Group controlId=\"exampleForm.SelectCustom\">\n                    <Form.Control as=\"select\" htmlSize={5} custom style={{ width: \"80%\"}} onChange={(e) => this.onChange(e.target.value, 'time')} value={this.state.time}>\n                        {list}\n                    </Form.Control>\n                </Form.Group>\n            )\n        }\n\n        return (\n\n            <Container>\n                <Card style={{\n                    width: 800,\n                    border: 0\n                }}>\n                    <Card.Body>\n                        <Card.Title style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\"\n                        }}>Registrace nové objednávky</Card.Title>\n                        <Form>\n\n                            <Row className=\"mt-3\">\n                                <Col>\n                                    <Form.Group id=\"nameId\">\n                                        <Form.Label>{this.labels.name}</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"např. Karel\"\n                                            value={this.state.name}\n                                            onChange={(e) => this.onChange(e.target.value, 'name')}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                                <Col>\n                                    <Form.Group id=\"surnameId\">\n                                        <Form.Label>{this.labels.surname}</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"např. Novák\"\n                                            value={this.state.surname}\n                                            onChange={(e) => this.onChange(e.target.value, 'surname')}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"mt-3\">\n                                <Col>\n                                    <Form.Group id=\"phoneId\">\n                                        <Form.Label>{this.labels.phone}</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"např. +420605312434\"\n                                            value={this.state.phone}\n                                            onChange={(e) => this.onChange(e.target.value, 'phone')}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                                <Col>\n                                    <Form.Group id=\"emailId\">\n                                        <Form.Label>{this.labels.email}</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"např. karelnovak@seznam.cz\"\n                                            value={this.state.email}\n                                            onChange={(e) => this.onChange(e.target.value, 'email')}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col>\n                                    <Row className=\"mt-3\">\n                                        <Form.Group id=\"streetId\">\n                                            <Form.Label>{this.labels.street}</Form.Label>\n                                            <Form.Control\n                                                type=\"text\"\n                                                placeholder=\"např. Dlouhá\"\n                                                value={this.state.street}\n                                                onChange={(e) => this.onChange(e.target.value, 'street')}\n                                            />\n                                        </Form.Group>\n                                    </Row>\n                                    <Row className=\"mt-3\">\n                                        <Form.Group id=\"houseNumberId\">\n                                            <Form.Label>{this.labels.houseNumber}</Form.Label>\n                                            <Form.Control\n                                                type=\"text\"\n                                                placeholder=\"např. 5568\"\n                                                value={this.state.houseNumber}\n                                                onChange={(e) => this.onChange(e.target.value, 'houseNumber')}\n                                            />\n                                        </Form.Group>\n                                    </Row>\n                                    <Row className=\"mt-3\">\n                                        <Form.Group id=\"cityId\">\n                                            <Form.Label>{this.labels.city}</Form.Label>\n                                            <Form.Control\n                                                type=\"text\"\n                                                placeholder=\"např. Praha\"\n                                                value={this.state.description}\n                                                onChange={(e) => this.onChange(e.target.value, 'city')}\n                                            />\n                                        </Form.Group>\n                                    </Row>\n                                </Col>\n\n                                <Col>\n                                    <Row className=\"mt-3\">\n                                        <Form.Group id=\"plateId\">\n                                            <Form.Label>{this.labels.plate}</Form.Label>\n                                            <Form.Control\n                                                type=\"text\"\n                                                placeholder=\"např. 1T23456\"\n                                                value={this.state.description}\n                                                onChange={(e) => this.onChange(e.target.value, 'plate')}\n                                            />\n                                        </Form.Group>\n                                    </Row>\n                                    <Row className=\"mt-3\">\n                                        <Form.Group id=\"exampleForm.ControlSelect1\">\n                                            <Form.Label>Typ vozidla</Form.Label>\n                                            <Form.Control as=\"select\" onChange={(e) => this.onChange(e.target.value, 'vehicle')}>\n                                                <option>CAR</option>\n                                                <option>VAN</option>\n                                                <option>TRUCK</option>\n                                            </Form.Control>\n                                        </Form.Group>\n\n                                    </Row>\n                                    <Row className=\"mt-5\">\n                                        <Form.Group id=\"startWorkId\">\n                                            <DateTimePicker\n                                                disableClock\n                                                format=\"dd/MM/yyyy\"\n                                                locale=\"cs-CS\"\n                                                onChange={(e) => {\n                                                    this.onChange(e, 'date')\n                                                }}\n                                                value={this.state.date}\n                                            />\n                                        </Form.Group>\n                                    </Row>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"mt-3\">\n                                <Col>\n                                    <Form.Check type={\"checkbox\"} label={\"Pneumatiky\"} id={\"pneu\"} onChange={(e) => {this.check(e, 'pneu')}}/>\n                                    <Form.Check type={\"checkbox\"} label={\"Výměna oleje\"} id={\"oil\"} onChange={(e) => {this.check(e, 'oil')}}/>\n                                    <Form.Check type={\"checkbox\"} label={\"Baterie\"} id={\"battery\"} onChange={(e) => {this.check(e, 'battery')}}/>\n                                    <Form.Check type={\"checkbox\"} label={\"Klimatizace\"} id={\"ac\"} onChange={(e) => {this.check(e, 'ac')}}/>\n                                    <Form.Check type={\"checkbox\"} label={\"Stěrače\"} id={\"wiper\"} onChange={(e) => {this.check(e, 'wiper')}}/>\n                                    <Form.Check type={\"checkbox\"} label={\"Kompletní servis\"} id={\"complete\"} onChange={(e) => {this.check(e, 'complete')}}/>\n                                    <Form.Check type={\"checkbox\"} label={\"Geometrie\"} id={\"geometry\"} onChange={(e) => {this.check(e, 'geometry')}}/>\n                                </Col>\n                                <Col>\n                                    <DisplayItems>{this.state.data}</DisplayItems>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                                    <Button variant=\"primary\" disabled={this.button}\n                                            onClick={this.postToBack} type=\"submit\">Uložit</Button>\n                                </Col>\n                            </Row>\n\n                        </Form>\n                    </Card.Body>\n                </Card>\n            </Container>\n        );\n    }\n\n}\n\nexport default App;\n","C:\\Users\\Dumar\\Desktop\\Projekt Reworked\\SWI1_projekt\\Spring_React\\src\\main\\frontend\\src\\index.js",[],"C:\\Users\\Dumar\\Desktop\\Projekt Reworked\\SWI1_projekt\\Spring_React\\src\\main\\frontend\\src\\App.js",["35","36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":16,"nodeType":"44","messageId":"45","endLine":1,"endColumn":24},{"ruleId":"42","severity":1,"message":"46","line":2,"column":45,"nodeType":"44","messageId":"45","endLine":2,"endColumn":54},{"ruleId":"47","severity":1,"message":"48","line":74,"column":9,"nodeType":"49","messageId":"50","endLine":98,"endColumn":10},{"ruleId":"42","severity":1,"message":"43","line":1,"column":16,"nodeType":"44","messageId":"45","endLine":1,"endColumn":24},{"ruleId":"42","severity":1,"message":"46","line":2,"column":45,"nodeType":"44","messageId":"45","endLine":2,"endColumn":54},{"ruleId":"47","severity":1,"message":"48","line":74,"column":9,"nodeType":"49","messageId":"50","endLine":98,"endColumn":10},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ListGroup' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]